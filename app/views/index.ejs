<p class="mobile-text">Join Reset on desktop</p>
<div class="mobile-background"></div>
<section id="home" class="container">
    <div class="home-landing container">
        <button class="btn home-to-start">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 15">
                <path d="M7.83.81v1A3.22,3.22,0,0,1,11,5v5a3.21,3.21,0,1,1-6.42,0V5a3.21,3.21,0,0,1,3.2-3.22v-1m0,0h0A4.21,4.21,0,0,0,3.62,5v5a4.21,4.21,0,0,0,4.21,4.2h0A4.21,4.21,0,0,0,12.05,10V5A4.21,4.21,0,0,0,7.83.81Z"/>
                <path d="M7.71,6c-.28,0-.5-.06-.5-.33V4.35a.47.47,0,0,1,.5-.46.52.52,0,0,1,.5.52V5.65c0,.28-.22.35-.5.35Z"/>
            </svg>

            <svg class="arrow-scroll" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 15">
                <path d="M10.93,6.21a.72.72,0,0,1-.2.5L8,9.63a.73.73,0,0,1-1.07,0L4.26,6.7a.73.73,0,1,1,1.08-1l2.1,2.33L9.67,5.71a.73.73,0,0,1,1.26.5Z"/>
            </svg>
            <svg class="arrow-scroll" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 15">
                <path d="M10.93,6.21a.72.72,0,0,1-.2.5L8,9.63a.73.73,0,0,1-1.07,0L4.26,6.7a.73.73,0,1,1,1.08-1l2.1,2.33L9.67,5.71a.73.73,0,0,1,1.26.5Z"/>
            </svg>
        </button>
    </div>
    <div class="home-start container">
        <div class="form username-form">
            <div class="input-validator">
                <span class="error">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 15">
                    <path d="M8.38,7.51,9.94,6a.62.62,0,0,0-.88-.88L7.5,6.63,5.94,5.07A.62.62,0,0,0,5.06,6L6.62,7.51,5.06,9.07a.62.62,0,1,0,.88.88L7.5,8.39,9.06,10a.62.62,0,0,0,.88-.88Z"/>
                    </svg>
                </span>
                <span class="validated">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18">
                       <path d="M6.84,15l-5.2-4.5a1.15,1.15,0,0,1-.1-1.7h0a1.16,1.16,0,0,1,1.7-.1l3.3,2.9c.5.4,1,.73,1.7-.1l6.3-7a1.16,1.16,0,0,1,1.7-.1h0a1.16,1.16,0,0,1,.1,1.7l-7.9,8.8A1.11,1.11,0,0,1,6.84,15Z"/>
                     </svg>
                </span>
            </div>
            <input type="text" name="name" class="unselectable user-new-name" onselectstart="return false;" placeholder="Enter your name" />
            <div class="errors unselectable"></div>
            <p class="unselectable">Drag to join Reset</p>
            <div class="enter-reset">
                <div class="draggable">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 26">
                        <path d="M13,22.87a.5.5,0,0,1-.25-.07l-8-4.62a.5.5,0,0,1-.25-.43V8.52a.5.5,0,0,1,.25-.43l8-4.62a.5.5,0,0,1,.5,0l8,4.62a.5.5,0,0,1,.25.43v9.24a.5.5,0,0,1-.25.43l-8,4.62A.5.5,0,0,1,13,22.87ZM5.5,17.47,13,21.8l7.5-4.33V8.81L13,4.48,5.5,8.81Zm15.5.29h0Z"/>
                        <path d="M12.5,10v5l-1.05-1.15a.54.54,0,0,0-.76,0,.53.53,0,0,0,0,.75l1.91,2.12a.53.53,0,0,0,.78,0l2-2.12a.53.53,0,0,0,0-.75.55.55,0,0,0-.76,0l-1.06,1.1V10a.5.5,0,1,0-1,0Z"/>
                    </svg>
                </div>

                <div class="draggable-background"></div>
                <div class="draggable-ending"></div>
            </div>
        </div>
    </div>
</section>

<div id="result-box">
    <div class="room-result">
    </div>
    <div class="users-result"></div>
    <div class="form username-form">
        <div class="input-validator">
            <span class="error">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 15">
                <path d="M8.38,7.51,9.94,6a.62.62,0,0,0-.88-.88L7.5,6.63,5.94,5.07A.62.62,0,0,0,5.06,6L6.62,7.51,5.06,9.07a.62.62,0,1,0,.88.88L7.5,8.39,9.06,10a.62.62,0,0,0,.88-.88Z"/>
                </svg>
            </span>
            <span class="validated">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18">
                       <path d="M6.84,15l-5.2-4.5a1.15,1.15,0,0,1-.1-1.7h0a1.16,1.16,0,0,1,1.7-.1l3.3,2.9c.5.4,1,.73,1.7-.1l6.3-7a1.16,1.16,0,0,1,1.7-.1h0a1.16,1.16,0,0,1,.1,1.7l-7.9,8.8A1.11,1.11,0,0,1,6.84,15Z"/>
                     </svg>
                </span>
        </div>
        <input type="text" name="name" class="unselectable user-new-name" placeholder="Enter your name" />
        <div class="errors unselectable"></div>
        <div class="enter-reset">
            <button class="btn-ui">Validate</button>
        </div>
    </div>
</div>

<section id="canvas-container"></section>

<script id="vshader" type="x-shader/x-vertex">

	varying vec2 vUv;

	void main() {

	  vUv = uv;

	  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
	}
</script>
<script id="fshader" type="x-shader/x-fragment">

	uniform float whitePath;
	varying vec2 vUv;

	void main() {
		if (vUv.y > whitePath) {
			gl_FragColor = vec4(0.1, 0.1, 0.1, 1.0);
		} else {
	  		gl_FragColor = vec4(1, 1, 1, 1.0);
	  }
	}
</script>


<script type="x-shader/x-vertex" id="texture-vertexShader">

	attribute vec4 tangent;

	uniform float time;
	uniform float useRim;

	varying vec3 vNormal;
	varying vec3 vEye;
	varying vec3 vU;
	varying vec2 vN;

	void main() {

		vU = normalize( vec3( modelViewMatrix * vec4( position, 1.0 ) ) );

		vec3 n = normalize( normalMatrix * normal );
		vec3 r = reflect( vU, n );
		float m = 2.0 * sqrt( r.x * r.x + r.y * r.y + ( r.z + 1.0 ) * ( r.z+1.0 ) );
		vN = vec2( r.x / m + 0.5,  r.y / m + 0.5 );

		gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		vNormal = normalize( normalMatrix * normal );

		if( useRim > 0. ) {
			vEye = ( modelViewMatrix * vec4( position, 1.0 ) ).xyz;
		} else {
			vEye = vec3( 0. );
		}

	}

	</script>

	<script type="x-shader/x-vertex" id="texture-fragmentShader">

	uniform float time;
	uniform sampler2D tMatCap;
	uniform float noise;
	uniform float useRim;
	uniform float rimPower;
	uniform float useScreen;

	varying vec3 vNormal;
	varying vec3 vEye;
	varying vec2 vN;

	float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}

	void main() {

		vec3 finalNormal = vNormal;
		vec2 calculatedNormal = vN;

		vec3 base = texture2D( tMatCap, calculatedNormal ).rgb;

		// rim lighting

		if( useRim > 0. ) {
			float f = rimPower * abs( dot( vNormal, normalize( vEye ) ) );
			f = useRim * ( 1. - smoothstep( 0.0, 1., f ) );
	        base += vec3( f );
	    }

	    // screen blending

        if( useScreen == 1. ) {
			base = vec3( 1. ) - ( vec3( 1. ) - base ) * ( vec3( 1. ) - base );
		}

        // noise

        base += noise * ( .5 - random( vec3( 1. ), length( gl_FragCoord ) ) );

		gl_FragColor = vec4( base, 1. );

	}

	</script>
